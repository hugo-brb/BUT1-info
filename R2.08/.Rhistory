library(ggplot2)
library(dplyr)
ggplot(diamonds, aes(x = cut, y = ..count.. / sum(..count..))) +
geom_histogram(breaks = (seq(2, 6, by = 0.5)), fill = "grey40", color = "black", alpha = 0.4)+
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
theme_minimal()
```{R Table des diamants, echo=FALSE}
ggplot(diamonds, aes(x = cut, y = depth, fill = cut)) +
geom_boxplot() +
labs(title = "Table en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Pourcentage de profondeur")+
guides(fill = FALSE)
Pourquoi prendre le log du prix ?
On constate dans le tableau suivant que l'étendue des prix est très grande.
```{r}
diamonds%>%summarise(minimum = min(price),Q1 = quantile(price, 0.25), moyenne = round(mean(price), 0),  mediane = median(price), Q3 = quantile(price, 0.75), maximum=max(price))
```
Cela est aussi visible sur l'histogramme :
```{r histogramme du prix}
ggplot(diamonds, aes(x = price)) +
geom_histogram(breaks = seq(0, 20000, 1000), fill = "grey40", color = "black", alpha = 0.4)
```{r histogramme avec echelle log,message=FALSE, echo=FALSE}
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
scale_x_continuous(trans = "log10") +
annotation_logticks()
ggplot(diamonds, aes(x = price)) +
geom_histogram() +
scale_x_continuous(trans = "log10") +
annotation_logticks()
Une autre façon de faire : tracer l'histogramme de log(price) mais là on voit que l'axe des x n'est plus en dollars !!!
```{r histogramme du log(prix),echo=FALSE,message=FALSE}
ggplot(diamonds, aes(x = log(price), y = ..density..)) +
geom_histogram()
ggplot(diamonds, aes(x = log(price), y = ..density..)) +
geom_histogram()
Quelques statistiques sur le logarithme du prix en fonction de la qualité de la coupe :
```{r statistiques sur le prix,echo=FALSE,message=FALSE}
# Des chiffres
diamonds %>%
group_by(cut) %>%
summarise(moyenne = round(mean(log(price)), 3), médiane = median(log(price)))
# Des chiffres
diamonds %>%
group_by(cut) %>%
summarise(moyenne = round(mean(log(price)), 3), médiane = median(log(price)))
Et quelques autres graphiques à titre d'exemples
```{r graphiques,echo=FALSE,message=FALSE}
ggplot(diamonds) +
geom_boxplot(aes(x = cut, y = log(price)))
ggplot(diamonds) +
geom_boxplot(aes(x = cut, y = carat))
ggplot(diamonds) +
geom_boxplot(aes(x = cut, y = carat))
ggplot(diamonds) +
geom_point(aes(x = carat, y = log(price)), color = "darkblue", alpha = 0.3)
ggplot(diamonds) +
geom_point(aes(x = carat, y = log(price)), color = "darkblue", alpha = 0.3)
ggplot(diamonds) +
geom_point(aes(x = carat, y = log(price), color = cut), alpha = 0.3)
ggplot(diamonds) +
geom_point(aes(x = carat, y = log(price), color = cut), alpha = 0.3) +
scale_x_continuous(limits = c(0, 3))
# Calculer le pourcentage de diamants par profondeur
diamonds_percent <- diamonds %>%
mutate(depth_group = cut(depth, breaks = seq(2, 6, by = 0.5))) %>%
group_by(depth_group) %>%
summarise(percentage = n() / nrow(diamonds))
# Créer le graphique
ggplot(diamonds_percent, aes(x = depth_group, y = percentage)) +
geom_bar(stat = "identity", fill = "grey40", color = "black", alpha = 0.4) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
diamonds%>%summarise(minimum = min(price),Q1 = quantile(price, 0.25), moyenne = round(mean(price), 0),  mediane = median(price), Q3 = quantile(price, 0.75), maximum=max(price))
```{r histogramme du prix}
ggplot(diamonds, aes(x = depth)) +
geom_histogram(breaks = seq(2, 6, by = 0.5), fill = "viridis", color = "black", alpha = 0.8) +
geom_density(alpha = 0.7) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis(discrete = TRUE) +
annotate("point", x = mean(diamonds$depth), y = 0.05, label = "Profondeur moyenne", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14))
```{R Pourcentage de profondeur, echo=FALSE}
ggplot(diamonds, aes(x = depth)) +
geom_histogram(breaks = seq(2, 6, by = 0.5), fill = "viridis", color = "black", alpha = 0.8) +
geom_density(alpha = 0.7) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis(discrete = TRUE) +
annotate("point", x = mean(diamonds$depth), y = 0.05, label = "Profondeur moyenne", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14))
ggplot(diamonds, aes(x = depth)) +
geom_histogram(breaks = seq(2, 6, by = 0.5), fill = "cut", color = "black", alpha = 0.8) +
geom_density(alpha = 0.7) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
scale_fill_viridis(discrete = TRUE) +
annotate("point", x = mean(diamonds$depth), y = 0.05, label = "Profondeur moyenne", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14))
ggplot(diamonds, aes(x = depth)) +
geom_histogram(breaks = seq(2, 6, by = 0.5), fill = "cut", color = "black", alpha = 0.8) +
geom_density(alpha = 0.7) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
annotate("point", x = mean(diamonds$depth), y = 0.05, label = "Profondeur moyenne", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14))
ggplot(diamonds, aes(x = depth)) +
geom_histogram(breaks = seq(2, 6, by = 0.5), fill = "cut", color = "black", alpha = 0.8) +
geom_density(alpha = 0.7) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
annotate("point", x = mean(diamonds$depth), y = 0.05, label = "Profondeur moyenne", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(),
axis.text.y = element_text(size = 12),
title = element_text(size = 14))
model <- lm(price ~ carat + cut + color + clarity, data = diamonds)
summary(model)
# Assuming you have the interaction column prepared
ggplot(diamonds, aes(x = color, y = price, color = cut)) +
geom_point() +
facet_wrap(~ cut) +
labs(title = "Interaction between Color and Price for Different Cuts",
x = "Color",
y = "Price")
ggplot(diamonds, aes(x = color, y = price, color = cut)) +
geom_point() +
facet_wrap(~ cut) +
labs(title = "",
x = "Color",
y = "Price")
ggplot(diamonds, aes(x = cut, y = price)) +
geom_boxplot() +
labs(title = "Prix des diamants par type de taille",
x = "Type de taille",
y = "Prix")
ggplot(diamonds, aes(x = cut, y = price)) +
geom_boxplot() +
labs(title = "Prix des diamants par type de taille",
x = "Cut",
y = "Prix")
model <- lm(price ~ carat + cut + color + clarity, data = diamonds)
summary(model)
ggplot(diamonds, aes(x = cut, y = price)) +
geom_boxplot() +
labs(title = "Prix des diamants par type de taille",
x = "Cut",
y = "Prix")
ggplot(diamonds, aes(x = cut, y = price), fill=cut) +
geom_boxplot() +
labs(title = "Prix des diamants par type de taille",
x = "Cut",
y = "Prix")
ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
geom_boxplot() +
labs(title = "Table en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Pourcentage de profondeur")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
geom_boxplot() +
labs(title = "Table en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = depth)) +
geom_histogram(breaks = seq(2, 6, by = 0.5), fill = "cut", color = "black", alpha = 0.8) +
geom_density(alpha = 0.7) +
labs(title = "Pourcentage de diamants par profondeur",
x = "Profondeur",
y = "Pourcentage de diamants") +
scale_y_continuous(labels = scales::percent) +
annotate("point", x = mean(diamonds$depth), y = 0.05, label = "Profondeur moyenne", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(),
axis.text.y = element_text(size = 12),
title = element_text(size = 14))
ggplot(diamonds, aes(x = cut, y = price), fill=cut) +
geom_boxplot() +
labs(title = "Prix des diamants par type de taille",
x = "Cut",
y = "Prix")
ggplot(diamonds, aes(x = cut, y = price, fill = cut)) +
geom_boxplot() +
labs(title = "Table en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = cut, y = log(price), fill = cut)) +
geom_boxplot() +
labs(title = "Table en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = cut, y = log(price), fill = cut)) +
geom_boxplot() +
labs(title = "Prix en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Prix")+
guides(fill = FALSE)
```{r Prix par cut, echo=FALSE}
ggplot(diamonds, aes(x = cut, y = log(price), fill = cut)) +
geom_boxplot() +
labs(title = "Prix en fonction de la qualité du diamant",
x = "Qualité de la coupe du diamant",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price))) +
geom_boxplot() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_boxplot() +
geom_density(alpha = 0.7) +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix") +
scale_fill_viridis(discrete = TRUE) +
annotate("point", x = mean(diamonds$carat), y = log(mean(diamonds$price)), label = "Prix moyen", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14)) +
facet_wrap(~cut)
library(viridisLite)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_boxplot() +
geom_density(alpha = 0.7) +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix") +
scale_fill_viridis(discrete = TRUE) +
annotate("point", x = mean(diamonds$carat), y = log(mean(diamonds$price)), label = "Prix moyen", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14)) +
facet_wrap(~cut)
library(ggplot2)
library(dplyr)
library(viridisLite)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_boxplot() +
geom_density(alpha = 0.7) +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix") +
scale_fill_viridis(discrete = TRUE) +
annotate("point", x = mean(diamonds$carat), y = log(mean(diamonds$price)), label = "Prix moyen", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14)) +
facet_wrap(~cut)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_boxplot() +
geom_density(alpha = 0.7) +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix") +
scale_fill_viridisLite(discrete = TRUE) +
annotate("point", x = mean(diamonds$carat), y = log(mean(diamonds$price)), label = "Prix moyen", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14)) +
facet_wrap(~cut)
ggplot(diamonds, aes(x = carat, y = log(price))) +
geom_boxplot() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_boxplot() +
geom_density(alpha = 0.7) +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix") +
scale_fill_manual(values = c("#0099FF", "#FF6600", "#9933FF")) +
annotate("point", x = mean(diamonds$carat), y = log(mean(diamonds$price)), label = "Prix moyen", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(margin = margin_tb(15)),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(margin = margin_rb(15)),
axis.text.y = element_text(size = 12),
title = element_text(size = 14)) +
facet_wrap(~cut)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_boxplot() +
geom_density(alpha = 0.7) +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix") +
scale_fill_manual(values = c("#0099FF", "#FF6600", "#9933FF")) +
annotate("point", x = mean(diamonds$carat), y = log(mean(diamonds$price)), label = "Prix moyen", colour = "black") +
theme_minimal() +
theme(legend.position = "bottom",
axis.title.x = element_text(),
axis.text.x = element_text(size = 12),
axis.title.y = element_text(),
axis.text.y = element_text(size = 12),
title = element_text(size = 14)) +
facet_wrap(~cut)
ggplot(diamonds, aes(x = carat, y = log(price))) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price)) fill = cut) +
ggplot(diamonds, aes(x = carat, y = log(price),fill = cut) ) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), fill = carat)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), fill = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(fill = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(color = FALSE)
ggplot(diamonds, aes(x = carat, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")+
guides(color = TRUE)
ggplot(diamonds, aes(x = carat, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")
ggplot(diamonds, aes(x = depth, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction des carats",
x = "Carat",
y = "Prix")
ggplot(diamonds, aes(x = depth, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Depth",
y = "Prix")
ggplot(diamonds, aes(x = color, y = log(price), color = cut)) +
geom_point() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Depth",
y = "Prix")
ggplot(diamonds, aes(x = color, y = log(price), color = cut)) +
geom_boxplot() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Depth",
y = "Prix")
ggplot(diamonds, aes(x = color, y = log(price))) +
geom_boxplot() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Color",
y = "Prix")
ggplot(diamonds, aes(x = color, y = log(price), fill=cut)) +
geom_boxplot() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Color",
y = "Prix")
ggplot(diamonds, aes(x = color, y = log(price))) +
geom_boxplot() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Color",
y = "Prix")
ggplot(diamonds, aes(x = color, y = log(price), fill=color)) +
geom_boxplot() +
labs(title = "Prix en fonction du pourcentage de profondeur des diamants",
x = "Color",
y = "Prix")
ggplot(diamonds, aes(x = clarity, y = log(price))) +
geom_boxplot() +
labs(title = "Prix en fonction de la clareté des diamants",
x = "Clarity",
y = "Prix")
ggplot(diamonds, aes(x = clarity, y = log(price), fill=clarity)) +
geom_boxplot() +
labs(title = "Prix en fonction de la clareté des diamants",
x = "Clarity",
y = "Prix")
library(utf8)
library(utf8)
ggplot(diamonds, aes(x = clarity, y = log(price), fill=clarity)) +
geom_boxplot() +
labs(title = "Prix en fonction de la clarté des diamants",
x = "Clarity",
y = "Prix")
